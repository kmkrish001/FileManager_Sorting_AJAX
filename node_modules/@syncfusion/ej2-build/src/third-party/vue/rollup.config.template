import rollupUglify from 'rollup-plugin-uglify';
import rollupCommonjs from 'rollup-plugin-commonjs';
import rollupResolve from 'rollup-plugin-node-resolve';
import rollupTypescript from 'rollup-plugin-typescript';
import rollupSourcemaps from 'rollup-plugin-sourcemaps';

export default {
    input: './global-script.ts',
    plugins: [
        rollupTypescript({
            typescript: require('typescript')
        }),
        rollupUglify(),
        rollupResolve({
            only: [ /^@syncfusion\/.*$/ ]
        }),
        rollupCommonjs(),
        rollupSourcemaps()
    ],
    output: {
        file: 'dist/global{{packName}}.min.js',
        format: 'iife',
        name: 'ej',
        intro: `window.process = { env: { NODE_ENV: 'production' } }`,
        footer: `
        this.ejs = ej;
        //Registering EJ2 Vue Components
        if (window.Vue) {
        var packages = Object.keys(ejs);
            for (var i = 0; i < packages.length; i++) {
                var pack = packages[i];
                var packKeys = Object.keys(ejs[pack]);
                for (var j = 0; j < packKeys.length; j++) {
                    var packKey = packKeys[j];
                    if (/Plugin/.test(packKey)) {
                        Vue.use(ejs[pack][packKey]);
                    }
                }
            }
        }
        // Global Module Export
        if ( typeof module === "object" && typeof module.exports === "object" ) {
            module.exports = {ej:ej};
        } 
        //AMD Module Export
        if ( typeof define === "function" && define.amd ) {
	        define( "ej", [], function() {
		        return {ej:ej};
	        } );
        }
        `,
        sourcemap: false
    }
};
