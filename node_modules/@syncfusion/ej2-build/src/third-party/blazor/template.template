@using System.Dynamic;
@using Newtonsoft.Json;
@using Microsoft.JSInterop;
@using Syncfusion.Blazor;
@using System.ComponentModel;
@using Microsoft.AspNetCore.Components;
@using Syncfusion.Blazor.{{NameSpace}};

@inherits BaseComponent;
@implements IDisposable;

{{TemplateRenderer}}
@code  {
    [Parameter]
    [JsonIgnore]
    public RenderFragment ChildContent { get; set; }

    [CascadingParameter]
    internal {{ParentType}} templateParent { get; set; }
    
    {{TemplateParameters}}

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        {{OnInitTemplate}}
        (({{ParentInterface}})this.templateParent).{{TemplateName}} = this;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);{{RenderTemplate}}
    }

    internal override void ComponentDispose()
    {
        this.templateParent = null;
        this.ChildContent = null;
        {{ComplexDispose}}
    }
}
