using System;
using System.Linq;
using Newtonsoft.Json;
using System.Reflection;
using Microsoft.JSInterop;
using System.ComponentModel;
using System.Threading.Tasks;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;
using Microsoft.AspNetCore.Components;
{{ImportNamespace}}

namespace Syncfusion.Blazor.{{className}}
{
    public class {{className}}Base : BaseComponent
    {
        protected override string nameSpace { get; set; } = "{{JSNameSpace}}";
        protected override string jsProperty { get; set; } = string.Empty;

		[Parameter]
        public override string ID { get; set; }        

		[Parameter]
        [JsonIgnore]
		public RenderFragment ChildContent { get; set; }
	
        {{Properties}}
        {{NativeEvent}}
        {{UpdateChildProperties}}

        [EditorBrowsable(EditorBrowsableState.Never)]
        public string GetJSNamespace()
        {
            return this.nameSpace;
        }

        protected override async Task OnInitializedAsync()
        {
            await base.OnInitializedAsync();
            
            this.jsProperty = this.GetJSNamespace();
{{InitializeProperties}}
            if (this.ID == null)
            {
                string path = this.nameSpace.Split('.')[1] + System.IO.Path.GetRandomFileName().Replace(".", "");
                this.ID = path;
            }
        }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        {{SetParameterChanges}}
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) 
    {
        await base.OnAfterRenderAsync(firstRender);{{AnnotationSettings}}
    }
    }
}